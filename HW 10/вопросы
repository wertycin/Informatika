1) Ситуации, в которых удобно использовать вариативные шаблоны:
  1. Массивы. содержащие произвольные классы
	2. Обертки для произвольных классов
	3. Функции с произвольным количеством аргументов произвольных типов

2) Обработать по очереди все аргументы из пакеты аргументов функции можно рекурисивно ( f(T arg, Types...args) { //... f(args...) ) или с помощью выражения свертки

3) Количество параметров в пакете параметров вариативного шаблона можно вычислить с помощью  sizeof...(Types) или sizeof...(args)

4) Cуществуют следующие разновидности выражений свёртки:
  1. Унарная правая сертка (E op ...) становится (E1 op (... op (EN-1 op EN))) (нормальный порядок взаимодействия)
  2. Унарная левая свертка (... op E) становится (((E1 op E2) op ...) op EN) (инвертированный порядок взаимодействия)
  3. Бинарная правая свертка (E op ... op I) становится (E1 op (... op (EN−1 op (EN op I)))) (если элементы пакета взаимодействуют через оператор с каким-то заданным I, инвертированный порядок взаимодействия)
  4. Бинарная левая свертка (I op ... op E) становится ((((I op E1) op E2) op ...) op EN) (если элементы пакета взаимодействуют через оператор с каким-то заданным I, нормальный порядок взаимодействия)


5) Разница между динамическим и статическим полиморфизмом заключается в следующем:
  1. Статический полиморфизм: одно и то же имя метода перегружено с другим типом или количеством параметров в одном классе (разные сигнатуры). Целевой вызов метода разрешается во время компиляции.
  2. Динамический полиморфизм: один и тот же метод переопределяется одинаковой сигнатурой в разных классах. Тип объекта, для которого вызывается метод, неизвестен во время компиляции, но будет определен во время выполнения.
