1) задать значения для данных-членов структуры можно с помощью присваивания, инициализации по умолчанию, агрегатной инициалзиации, конструктора.
2) списки инициализации предназначены для инициализации данных-членов без необходимости использовать присваивание.
3) Получение ресурса есть инициализация (англ. Resource Acquisition Is Initialization (RAII)) — программная идиома, смысл которой заключается в том, что с помощью тех или иных программных механизмов получение некоторого ресурса неразрывно совмещается с инициализацией, а освобождение — с уничтожением объекта.

Типичным (хотя и не единственным) способом реализации является организация получения доступа к ресурсу в конструкторе, а освобождения — в деструкторе соответствующего класса. В некоторых языках программирования, прежде всего в C++, деструктор переменной немедленно вызывается при выходе из её области видимости, в том числе в ситуациях, когда возникло исключение, и таким образом, ресурс необходимо освободить, что делает RAII ключевой концепцией для написания кода, безопасного при исключениях (в языках, семантика которых предполагает обязательное наличие сборщика мусора, объект продолжает существовать, пока на него существуют ссылки).
4) использование битовых полей/объединений стоит рассматривать, когда известен размер данных-членов структуры.
5) перечисления с областью видимости обладают двумя основными особенностями: они не засоряют область видимости (нужно писать class::elem вместо elem), для работы с элементами как с целыми числами нужно использовать static_cast.
