#include<stdexcept>
#include<string>
#include<iostream>
#include<ctime>


double Square_root(double x)
{
	if (x < 0) throw std::domain_error("Error: extracting the root of a negative number\n");
	return sqrt(x);
}
std::string To_call(const std::string& s)
{
	for (char c : s)
	{
		if (c > 57 || c < 48) throw std::invalid_argument("Error: invalid phone number\n");
	}
	return "Mr. Lisovsky is busy at the moment. Please call back later.";
}

int main()
{
	try
	{
		double x;
		std::cout << "Enter x to get the square root of x: x = ";
		std::cin >> x;
		std::cout << Square_root(x) << '\n';

		std::string Phone_number;
		std::cout << "Enter the subscriber's phone number: ";
		std::cin >> Phone_number;
		std::cout << To_call(Phone_number) << '\n';

		unsigned int start_time = clock();
		unsigned int end_time = clock();
		while (true)
		{
			end_time = clock();
			if (end_time - start_time > 3000) throw std::runtime_error("Error: the cycle takes more than 3 seconds\n");
		}
		
	}
	catch (const std::invalid_argument& exception)
	{
		std::cerr << exception.what() << std::endl;
	}
	catch (const std::domain_error& exception)
	{
		std::cerr << exception.what() << std::endl;
	}
	catch (const std::runtime_error& exception)
	{
		std::cerr << exception.what() << std::endl;
	}
}
	catch (std::invalid_argument m_error)
	{
		std::cerr << m_error.what() << std::endl;
	}
}
