String evaluate_salary_and_return_name (Employee e)
  {
    if (e.title () == "CEO" || e.salary() > 100000)
  {
  std::cout << e.name() << " " << e.surname() << " is overpaid.\n";
  }
    else
  {
  std::cout << e.name() << " is not overpaid.\n";
  }
    return e.name() + " " + e.surname();
  }


Пути выполнения программы :
Если исключения не были вызваны :
  1. Через if
  2. Через else
Если было вызвано исключение :
В условии if :
	3. Исключение внутри  title() внутри e
	4. Некорректный тип e.title() для сравнения с string
	5. Исключение внутри salary() внутри e
	6. Некорректный тип e.salary() для сравнения с int
	В теле if :
	7. Исключение внутри name() внутри e
	8. Некорректный тип e.name() для оператора вывода
	9. Исключение внутри surname() внутри e
	10. Некорректный тип e.surname() для оператора вывода
В теле else:
  11. Исключение внутри name() внутри e
  12. Некорректный тип e.name() для оператора вывода
Исключения внутри return, если был реализован if :
  13. Исключение внутри name() внутри e
  14. Некорректный тип e.name() для сложения с string
  15. Исключение внутри surname() внутри e
  16. Некорректный тип e.surname() для сложения с string
Исключения внутри return, если был реализован else:
  17. Исключение внутри name() внутри e
  18. Некорректный тип e.name() для сложения с string
  19. Исключение внутри surname() внутри e
  20. Некорректный тип e.surname() для сложения с string
